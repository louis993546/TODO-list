apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "io.github.louistsaitszho.stand_up"
        minSdkVersion 16
        //noinspection OldTargetApi
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    dataBinding {
        enabled = true
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // General Android stuff
    implementation 'androidx.appcompat:appcompat:1.1.0-rc01'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta2'
    implementation 'androidx.recyclerview:recyclerview:1.1.0-beta01'
    implementation 'com.google.android.material:material:1.1.0-alpha08'
    def fragment_version = "1.1.0-rc03"
    implementation "androidx.fragment:fragment:$fragment_version"
    // cannot use androidTestImplantation, as it failed to resolve dependencies......
    // See https://developer.android.com/training/basics/fragments/testing#configure
    implementation "androidx.fragment:fragment-testing:$fragment_version"

    // Dagger
    def dagger_version = "2.24"
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger_version"

    // Lifecycle & ViewModel
    def lifecycle_version = '2.1.0-rc01'
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version"
    testImplementation "androidx.arch.core:core-testing:$lifecycle_version"

    // Room
    def room_version = "2.1.0"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    implementation "androidx.room:room-guava:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:2.2.10"

    // Backports or utils or kotlin-ish toys
    implementation 'com.google.guava:guava:28.0-android'
    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.1'
    testImplementation 'org.threeten:threetenbp:1.4.0'
    implementation 'androidx.multidex:multidex:2.0.1'

    // Other
    implementation 'com.jakewharton.timber:timber:4.7.1'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0-alpha-3'

    // General testing stuff
    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:2.25.0"
    testImplementation 'org.robolectric:robolectric:4.3'
    // See fragment-testing for why this is debugImplementation
    debugImplementation 'androidx.test:core:1.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    testImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
